using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/*
Тестовое задание на должность Unity-разработчик.

Реализовать примитивную версию игры Arkanoid. 
Для разработки использовать желательно использовать последнюю версию Unity, можно и младше, но не ниже 2017. В процессе разработки для написания скриптов использовать только C#.

Геймплей:
Есть бита, которой мы управляем влево-вправо (реализация управления за Вами), и шарик, который отлетает от этой биты и краев экрана.
Задача: разбить кирпич, находящийся в произвольном месте. Кирпичи могут быть разных видов, в зависимости от вида требуется k попаданий шариком для уничтожения кирпича. 
Каждые n секунд, кирпичи опускаются на одну ячейку вниз;
В случае, если шарик касается нижней границы экрана, игра считается проигранной.
В случае, если все кирпичи уничтожены, игра считается выигранной; 

UI:
В игре должен быть интерфейс, реализованный на Unity UI. В интерфейсе должны отображаться: Счётчик текущих очков и таймер до следующего опускания блоков. По окончанию игры должно выводится окно с результатами(Выиграл/Проиграл и кнопка рестарта)

Бонусные задачи:
 - Написать шейдер, уводящий цвет кирпича в красный по мере приближения к нижней границе экрана. Необходимо использовать только шейдер, без использования С# кода
 - рандомная генерация уровней
 - AssetBundles

Как присылать:
Ссылка на github / bitbucket

FAQ:
- Должна ли игра интересно играться, настраивать ли баланс?
    - Требуется настройка параметров указанных в "Геймплей"
- На что обращать внимание?
    - В первую очередь - на качество кода: не количество использованных паттернов ООП, а понятный и читаемый код, который не перестанет работать от любого “чиха” в редакторе; нормальное именование переменных; 
    грамотное разделение на функции и пр.
- Надо ли делать в игре арт?
    - На ваше усмотрение. Нас вполне устроят solid color.
 */

public class GameManager : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        
    }

    // Update is called once per frame
    void Update()
    {
        
    }
}
